// prisma/schema.prisma 
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_DATABASE_URL")
}

model News {
  id          String   @id @default(cuid())
  title       String
  slug        String?
  content     String?  @db.Text
  rawBody     String?  @db.Text
  publishedAt DateTime @default(now())
  categories  String?
  status      String   @default("draft")

  sanityId   String? @unique
  sanityRev  String?
  sanityType String? @default("News")

  mainImageUrl     String?
  mainImageAltText String?

  links Json?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("news")
}

model Project {
  id          String   @id @default(cuid())
  title       String
  slug        String   @unique
  description String?  @db.Text
  content     String?  @db.Text
  rawBody     String?  @db.Text
  publishedAt DateTime @default(now())
  author      String?
  categories  String?
  status      String   @default("draft")

  names Json?

  mainImageUrl     String?
  mainImageAltText String?

  githubRepo String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("projects")
}

model Event {
  id                  String    @id @default(cuid())
  title               String
  slug                String?
  description         String?   @db.Text
  detailedDescription String?   @db.Text
  date                String?
  actualDate          DateTime?
  location            String?   @default("GRIET Campus, Hyderabad")
  organizer           String?   @default("Advanced Academic Center")
  status              String    @default("upcoming")

  mainImageUrl String?
  images       Json?

  ctaText String?
  ctaLink String?

  path String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("events")
}

model Publication {
  id          String   @id @default(cuid())
  title       String
  abstract    String   @db.Text
  publication String   @db.Text
  category    String
  year        Int
  publishedAt DateTime @default(now())

  authors Json

  image       String?
  downloadUrl String?
  keywords    Json?
  type        String? @default("Journal Paper")

  paperLink String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("publications")
}

model Patent {
  id                String   @id @default(cuid())
  title             String   @db.Text
  shortTitle        String
  description       String   @db.Text
  applicationNumber String
  patentOffice      String
  date              DateTime
  status            String   @default("Published Online")
  category          String
  color             String   @default("purple")

  inventors Json

  image String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("patents")
}

model Book {
  id          String  @id @default(cuid())
  title       String
  description String  @db.Text
  category    String
  year        Int
  cover       String?
  color       String  @default("blue")
  status      String  @default("published")

  authors Json

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("books")
}

model Alumni {
  id              String  @id @default(cuid())
  name            String
  designation     String?
  company         String?
  image           String?
  graduationYear  Int?
  department      String?
  status          String  @default("active")
  email           String?
  linkedin        String?
  currentLocation String?
  achievements    String? @db.Text
  bio             String? @db.Text

  legacyId String? @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("alumni")
}

model Startup {
  id              String   @id @default(cuid())
  name            String
  description     String   @db.Text
  mission         String   @db.Text
  category        String
  color           String   @default("blue")
  status          String   @default("Active")
  establishedDate DateTime
  website         String?
  logo            String?
  image           String?

  founders Json

  appScreenshots Json?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("startups")
}

model CoreCommittee {
  id          String  @id @default(cuid())
  name        String
  designation String
  image       String?
  year        Int     @default(2024)
  department  String?
  status      String  @default("active")

  legacyId String? @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("core_committee")
}

model Achievement {
  id          String   @id @default(cuid())
  title       String
  description String   @db.Text
  date        DateTime
  names       Json
  images      Json
  mainImage   String?
  category    String?
  status      String   @default("published")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("achievements")
}
